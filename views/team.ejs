<%- include("./partial/head") %> 
<%- include("./partial/top-nav") %>

<div class="bg-rose">
    <div id="main-body" class="container row constraint">
        <div class="bg-white mid-round border padding">
            <img src="<%= team.badge %>" alt="<%= team.club %> Logo" style="width: 150px; height: 150px;">
        </div>
        <div class="column no-gap small-main">
            <!-- Team Tabs for navigation (Summary, Matches, Squad) -->
            <nav class="dates bg-white tab-nav" style="justify-content: space-around; width: 350px;">
                <button id="summary" class="tab-btn link-btn">Summary</button>
                <button id="games" class="tab-btn link-btn">Matches</button>
                <button id="squad" class="tab-btn link-btn">Squad</button>
            </nav>

            <!-- Summary Section (Initially Visible) -->
            <section id="summaryDisplay" class="display">
                <h1 class="huge"><%= team.club %></h1>
                <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit...</p>
                <div class="team-details">
                    <p><strong>Founded:</strong> <%= team.founded %></p>
                    <p><strong>Country:</strong> <%= team.country_id %></p>
                </div>
            </section>

            <!-- Games Section (Initially Hidden) -->
            <section id="gamesDisplay" class="games-container column small-top none">
                <% if (games.length === 0) { %>
                    <p class="no-games">No games found for this team.</p>
                <% } else { %>
                    <% games.forEach(game => { %>
                        <div class="row bg-white small-round small-padding game-card visible" data-game-id="<%= game.id %>">
                            <!-- Timer will be updated dynamically -->
                            <small class="time small-padding bold black" id="timer-<%= game.id %>" data-start-time="<%= game.start %>">Loading...</small>
                            
                            <section class="column max">
                                <section class="row">
                                    <span class="row max">
                                        <!-- Home team logo and name -->
                                        <img src="<%= game.home_logo %>" alt="<%= game.home_club %>" class="tiny-logo mid-round">
                                        <h5 class="mid bold"><%= game.home_club %></h5>
                                    </span>
                                    <!-- Home team score -->
                                    <h5 class="mid bold"><%= game.home_goal %></h5>
                                </section>
                                <section class="row between">
                                    <span class="row max">
                                        <!-- Away team logo and name -->
                                        <img src="<%= game.away_logo %>" alt="<%= game.away_club %>" class="tiny-logo mid-round">
                                        <h5 class="mid bold"><%= game.away_club %></h5>
                                    </span>
                                    <!-- Away team score -->
                                    <h5 class="mid bold move-right"><%= game.away_goal %></h5>
                                </section>
                            </section>
                        </div>
                    <% }); %>
                <% } %>
            </section>
            

            <!-- Squad Section (Initially Hidden) -->
            <section id="squadDisplay" class="none">
                <% const playersByPosition = squad.reduce((acc, player) => { acc[player.position] = acc[player.position] || []; acc[player.position].push(player); return acc; }, {}); %>

                <% if (squad.length === 0) { %>
                    <div class="no-players">No players found for this team.</div>
                <% } else { %>
                    <% Object.keys(playersByPosition).forEach(position => { %>
                        <h3 style="color: var(--navy-blue);"><%= position %></h3>
                        <% playersByPosition[position].forEach(player => { %>
                            <div class="row">
                                <img src="/images/shield.webp" alt="" style="width: 30px; height: auto;">
                                <h3><%= player.fullname %></h3>
                            </div>
                        <% }); %>
                    <% }); %>
                <% } %>
            </section>
        </div>
    </div> 
</div>

<!-- JavaScript for Tab Switching -->
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const summary = document.getElementById('summary');
        const games = document.getElementById('games');
        const squad = document.getElementById('squad');
        const summaryDisplay = document.getElementById('summaryDisplay');
        const gamesDisplay = document.getElementById('gamesDisplay');
        const squadDisplay = document.getElementById('squadDisplay');

        const tabButtons = [summary, games, squad];  // Group the tab buttons for easy management

        // Function to remove 'active' class from all buttons
        function removeActiveClass() {
            tabButtons.forEach(btn => btn.classList.remove('active'));
        }

        // Handle clicking on the Matches (Games) tab
        games.addEventListener('click', function() {
            console.log('Matches clicked');
            removeActiveClass();  // Remove 'active' class from all buttons
            games.classList.add('active');  // Add 'active' class to the clicked button
            summaryDisplay.style.display = 'none';
            squadDisplay.style.display = 'none';
            gamesDisplay.style.display = 'block';
        });

        // Handle clicking on the Summary tab
        // Handle clicking on the Summary tab
        summary.addEventListener('click', function() {
            console.log('Summary clicked');
            removeActiveClass();  // Remove 'active' class from all buttons
            summary.classList.add('active');  // Add 'active' class to the clicked button
            summaryDisplay.style.display = 'block';
            squadDisplay.style.display = 'none';
            gamesDisplay.style.display = 'none';
        });

        // Handle clicking on the Squad tab
        squad.addEventListener('click', function() {
            console.log('Squad clicked');
            removeActiveClass();  // Remove 'active' class from all buttons
            squad.classList.add('active');  // Add 'active' class to the clicked button
            summaryDisplay.style.display = 'none';
            squadDisplay.style.display = 'block';
            gamesDisplay.style.display = 'none';
        });
    });

    function updateTimers() {
        const now = new Date();  // Current time

        document.querySelectorAll('[data-start-time]').forEach(timerElement => {
            const startTime = new Date(timerElement.getAttribute('data-start-time'));  // Game start time
            const timeDifference = now - startTime;  // Time difference in milliseconds

            // Calculate time in minutes for more precise conditions
            const timeInMinutes = timeDifference / (1000 * 60);

            // Pre-game: Countdown to start
            if (timeInMinutes < 0) {
                const remainingTime = Math.abs(timeInMinutes);  // Time left until the game starts
                const hours = Math.floor(remainingTime / 60);
                const minutes = Math.floor(remainingTime % 60);
                timerElement.innerText = `${hours}h ${minutes}m to start`;
            }
            // First half: Show time elapsed
            else if (timeInMinutes >= 0 && timeInMinutes <= 45) {
                timerElement.innerText = `${Math.floor(timeInMinutes)}'`;
            }
            // Half-time (HT): Between 45 and 60 minutes
            else if (timeInMinutes > 45 && timeInMinutes <= 60) {
                timerElement.innerText = 'HT';
            }
            // Second half: Show time elapsed after half-time
            else if (timeInMinutes > 60 && timeInMinutes <= 105) {
                timerElement.innerText = `${Math.floor(timeInMinutes - 15)}'`;
            }
            // Full-time (FT): After 90+ minutes
            else if (timeInMinutes > 105) {
                timerElement.innerText = 'FT';
            }
        });
    }

    // Update timers every second
    setInterval(updateTimers, 1000);

    // Initial call to update the timers on page load
    updateTimers();
</script>
